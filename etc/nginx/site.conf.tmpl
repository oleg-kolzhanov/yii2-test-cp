# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
# scheme used to connect to this server
map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  ''      $scheme;
}
# If we receive X-Forwarded-Port, pass it through; otherwise, pass along the
# server port the client connected to
map $http_x_forwarded_port $proxy_x_forwarded_port {
  default $http_x_forwarded_port;
  ''      $server_port;
}
# If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
# Connection header that may have been passed to this server
map $http_upgrade $proxy_connection {
  default upgrade;
  '' close;
}
# Set appropriate X-Forwarded-Ssl header
map $scheme $proxy_x_forwarded_ssl {
  default off;
  https on;
}
gzip_types text/plain text/css application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
log_format vhost '$host $remote_addr - $remote_user [$time_local] '
                 '"$request" $status $body_bytes_sent '
                 '"$http_referer" "$http_user_agent"';

access_log off;
proxy_http_version 1.1;
proxy_buffering off;
proxy_set_header Host $http_host;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $proxy_connection;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
proxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;
proxy_set_header X-Forwarded-Port $proxy_x_forwarded_port;
proxy_set_header Proxy "";

server {
    listen 80 default;
    return 444;
}

server {
    listen ${NGINX_PORT};
    server_name ${NGINX_HOST};
    root ${NGINX_ROOT}/frontend/web;
    index index.php

    charset utf-8;
    client_max_body_size 1024m;
    underscores_in_headers on;

    location ~ ^/uploads/profile/users/documents/(\d+)/(.+)(jpg|jpeg|gif|png)$ {
        return 404;
    }

    location / {
        # Перенаправляем все запросы к несуществующим директориям и файлам на index.php
        try_files $uri $uri/ /index.php?$args;
    }

    location ~* ^.+\.(jpg|jpeg|gif|png|ico|cur|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|swf|flv|avi|djvu|mp3|mp4|eot|svg|ttf|woff|mp3|ogg|html)$ {
        expires max;
        etag on;
        add_header Pragma "public";
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    # Предотвращаем обработку Yii обращений к несуществующим статическим файлам
    # location ~ \.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar)$ {
    #     try_files $uri =404;
    # }

    location ~ \.php$ {
        fastcgi_split_path_info  ^(.+\.php)(.*)$;

        # позволяем yii перехватывать запросы к несуществующим PHP-файлам
        set $fsn /index.php;
        if (-f $document_root$fastcgi_script_name){
            set $fsn $fastcgi_script_name;
        }

        fastcgi_pass ${PHP_HOST}:${PHP_PORT};
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fsn;

        # PATH_INFO и PATH_TRANSLATED могут быть опущены, но стандарт RFC 3875 определяет для CGI
        fastcgi_param  PATH_INFO        $fastcgi_path_info;
        fastcgi_param  PATH_TRANSLATED  $document_root$fsn;

        fastcgi_buffers 8 16k;
        fastcgi_buffer_size 32k;
    }

    location ~ /\.(ht|svn|git) {
        deny all;
    }
}

server {
    listen ${NGINX_PORT};
    server_name  backend.${NGINX_HOST};
    root ${NGINX_ROOT}/backend/web;
    index index.php

    charset utf-8;
    client_max_body_size 1024m;
    underscores_in_headers on;

    location ~ ^/uploads/profile/users/documents/(\d+)/(.+)(jpg|jpeg|gif|png)$ {
        return 404;
    }

    location / {
        # Перенаправляем все запросы к несуществующим директориям и файлам на index.php
        try_files $uri $uri/ /index.php?$args;
    }

    location ~* ^.+\.(jpg|jpeg|gif|png|ico|cur|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|swf|flv|avi|djvu|mp3|mp4|eot|svg|ttf|woff|mp3|ogg|html)$ {
        expires max;
        etag on;
        add_header Pragma "public";
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    # Предотвращаем обработку Yii обращений к несуществующим статическим файлам
    # location ~ \.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar)$ {
    #     try_files $uri =404;
    # }

    location ~ \.php$ {
        fastcgi_split_path_info  ^(.+\.php)(.*)$;

        # позволяем yii перехватывать запросы к несуществующим PHP-файлам
        set $fsn /index.php;
        if (-f $document_root$fastcgi_script_name){
            set $fsn $fastcgi_script_name;
        }

        fastcgi_pass ${PHP_HOST}:${PHP_PORT};
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fsn;

        # PATH_INFO и PATH_TRANSLATED могут быть опущены, но стандарт RFC 3875 определяет для CGI
        fastcgi_param  PATH_INFO        $fastcgi_path_info;
        fastcgi_param  PATH_TRANSLATED  $document_root$fsn;

        fastcgi_buffers 8 16k;
        fastcgi_buffer_size 32k;
    }

    location ~ /\.(ht|svn|git) {
        deny all;
    }
}
server {
    listen ${NGINX_PORT};
    server_name  api.${NGINX_HOST};
    root ${NGINX_ROOT}/api/web;
    index index.php

    charset utf-8;
    client_max_body_size 1024m;
    underscores_in_headers on;

    location ~ ^/uploads/profile/users/documents/(\d+)/(.+)(jpg|jpeg|gif|png)$ {
        return 404;
    }

    location / {
        # Перенаправляем все запросы к несуществующим директориям и файлам на index.php
        try_files $uri $uri/ /index.php?$args;
    }

    location ~* ^.+\.(jpg|jpeg|gif|png|ico|cur|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|swf|flv|avi|djvu|mp3|mp4|eot|svg|ttf|woff|mp3|ogg|html)$ {
        expires max;
        etag on;
        add_header Pragma "public";
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    # Предотвращаем обработку Yii обращений к несуществующим статическим файлам
    # location ~ \.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar)$ {
    #     try_files $uri =404;
    # }

    location ~ \.php$ {
        fastcgi_split_path_info  ^(.+\.php)(.*)$;

        # позволяем yii перехватывать запросы к несуществующим PHP-файлам
        set $fsn /index.php;
        if (-f $document_root$fastcgi_script_name){
            set $fsn $fastcgi_script_name;
        }

        fastcgi_pass ${PHP_HOST}:${PHP_PORT};
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fsn;

        # PATH_INFO и PATH_TRANSLATED могут быть опущены, но стандарт RFC 3875 определяет для CGI
        fastcgi_param  PATH_INFO        $fastcgi_path_info;
        fastcgi_param  PATH_TRANSLATED  $document_root$fsn;

        fastcgi_buffers 8 16k;
        fastcgi_buffer_size 32k;
    }

    location ~ /\.(ht|svn|git) {
        deny all;
    }
}
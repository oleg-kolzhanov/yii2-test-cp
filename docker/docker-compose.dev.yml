version: '2'

services:

  # Source
  source:
    image: tianon/true
    user: ${UID}:${GID}
    container_name: ${COMPOSE_PROJECT_NAME}-source
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ../app:${APP_PATH}
  #      - ./services/is/htdocs:${IS_APP_PATH}

  # Nginx
  nginx:
    build:
      context: nginx
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    working_dir: /docker/etc/nginx
    restart: always
    environment:
      - VIRTUAL_HOST=${APP_HOST},backend.${APP_HOST},api.${APP_HOST}
      - VIRTUAL_PORT=${APP_PORT}
      - VIRTUAL_NETWORK=proxy
      - HTTPS_METHOD=nohttps
      - NGINX_ROOT=${APP_PATH}
      - NGINX_HOST=${APP_HOST}
      - NGINX_PORT=${APP_PORT_HTTP}
      - PHP_HOST=${PHP_HOST}
      - PHP_PORT=${PHP_PORT}
    volumes_from:
      - source
    volumes:
      - ../log/nginx/:/var/log/nginx
      - ../etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../etc/nginx/site.conf.tmpl:/etc/nginx/site.conf.tmpl

      #      - ./services/is/conf/nginx.conf:/etc/nginx/nginx.conf
      #      - ./services/is/conf/site.conf.tmpl:/etc/nginx/site.conf.tmpl
      - /etc/nginx/sites-available
    depends_on:
      - db
      - php
    links:
      - db:${DB_HOST}
      - php:${PHP_HOST}
    expose:
      - ${APP_PORT_HTTP}
      - ${APP_PORT_HTTPS}
    command: /bin/bash -c "envsubst '$$NGINX_PORT $$NGINX_ROOT $$NGINX_HOST $$PHP_HOST $$PHP_PORT' < /etc/nginx/site.conf.tmpl > /etc/nginx/sites-available/site.conf && nginx -g 'daemon off;'"
    networks:
      - proxy
      - default

  # Database
  db:
    image: postgres:12.1-alpine
    container_name: ${COMPOSE_PROJECT_NAME}-db
    restart: always
    expose:
      - ${DB_PORT}
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ../sql/:/docker-entrypoint-initdb.d/
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - db:/var/lib/postgresql/data

  # Composer
  composer:
    build:
      context: composer
    container_name: ${COMPOSE_PROJECT_NAME}-composer
    user: ${UID}:${GID}
    working_dir: ${APP_PATH}
    environment:
      - UID=${UID}
      - GID=${GID}
      - COMPOSER_ALLOW_SUPERUSER=0
      - COMPOSER_MEMORY_LIMIT=-1
    volumes_from:
      - source

  # PHP-FPM
  php:
    build:
      context: php-fpm
      args:
        - INSTALL_OPCACHE=false
        - INSTALL_XDEBUG=true
    container_name: ${COMPOSE_PROJECT_NAME}-php
    environment:
      - UID=${UID}
      - GID=${GID}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_CHARSET=${DB_CHARSET}
    user: ${UID}:${GID}
    restart: always
    expose:
      - ${PHP_PORT}
    working_dir: ${APP_PATH}
    depends_on:
      - db
    links:
      - db:${DB_HOST}
    volumes_from:
      - source

  # Postgres web UI
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ${COMPOSE_PROJECT_NAME}-pgadmin
    environment:
      - VIRTUAL_HOST=pgadmin.${APP_HOST}
      - VIRTUAL_PORT=${NGINX_PORT}
      - VIRTUAL_NETWORK=proxy
      - PGADMIN_DEFAULT_EMAIL=${DB_ADMIN_USER}
      - PGADMIN_DEFAULT_PASSWORD=${DB_ADMIN_PASSWORD}
    expose:
      - ${NGINX_PORT}
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - db
    links:
      - db:${DB_HOST}
    restart: always
    networks:
      - proxy
      - default

  # Yii
  yii:
    build:
      context: yii
    container_name: ${COMPOSE_PROJECT_NAME}-yii
    environment:
      - UID=${UID}
      - GID=${GID}
    user: ${UID}:${GID}
    working_dir: ${APP_PATH}
    entrypoint: php yii
    depends_on:
      - db
      - php
    links:
      - db:${DB_HOST}
      - php:${PHP_HOST}
    volumes_from:
      - source

volumes:
  db:
  pgadmin:

networks:
  proxy:
    external:
      name: proxy
